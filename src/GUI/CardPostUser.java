/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import Classes.Posts;
import Classes.Users;
import Config.Connect;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author acer
 */
public class CardPostUser extends javax.swing.JPanel {

    /**
     * Creates new form CardPost
     */
    Posts data;
    public CardPostUser(Posts data) {
        this.data = data;
        initComponents();
        Users user = new Users(data.getUserId());
        title.setText(data.getTitle());
        posted.setText("Diposting oleh " + user.getName());
        content.setText("<html>" + data.getContent().replace("\n", "<br>")+ "</html>");
        comments.setText(data.totalComment() + " Comments");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        posted = new javax.swing.JLabel();
        content = new javax.swing.JLabel();
        comments = new javax.swing.JLabel();
        Edit = new javax.swing.JButton();
        Delete = new javax.swing.JButton();

        jLabel4.setText("jLabel4");

        jLabel1.setText("jLabel1");

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        title.setText("Title");

        posted.setText("Diposting oleh ");

        content.setText("content");

        comments.setText("10");

        Edit.setText("Edit");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(title)
                    .addComponent(posted)
                    .addComponent(content)
                    .addComponent(comments)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Edit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Delete)))
                .addContainerGap(344, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(posted)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(content)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comments)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Edit)
                    .addComponent(Delete))
                .addContainerGap(83, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        Post post = new Post(data.getId());
        post.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        post.setVisible(true);
    }//GEN-LAST:event_formMouseClicked

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        // TODO add your handling code here:
        EditPost EP = new EditPost(data.getId());
        EP.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        EP.setVisible(true);
    }//GEN-LAST:event_EditActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog (null, "Apakah anda ingin menghapus postingan ini??","Warning",dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION){
          // Saving code here
          System.out.print("Ya");
            try (Connection conn = Connect.getConnection(); Statement stmt = conn.createStatement()) {
                String deletePost = "DELETE FROM posts WHERE id = " + data.getId();
                String deleteComment = "DELETE FROM comments WHERE post_id = " + data.getId();
                stmt.addBatch(deletePost);
                stmt.addBatch(deleteComment);
                int[] i = stmt.executeBatch();
                if (i[0] > 0) {
                    JOptionPane.showMessageDialog(null,
                    "Post berhasil dihapus!");
                    this.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(null,
                    "Post gagal dihapus!");
                    this.setVisible(false);
                }

            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_DeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete;
    private javax.swing.JButton Edit;
    private javax.swing.JLabel comments;
    private javax.swing.JLabel content;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel posted;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
